CREATE SCHEMA EC1_CC1N;

USE EC1_CC1N;

#CRIANDO A TABELA FORNECEDORES
CREATE TABLE IF NOT EXISTS FORNECEDORES(
FORN_COD INT PRIMARY KEY,
FORN_NOME VARCHAR(45) NOT NULL,
FORN_RUA VARCHAR(45) NOT NULL,
FORN_NUMRUA INT,
FORN_BAIRRO VARCHAR(45) NOT NULL,
FORN_CIDADE VARCHAR(45) NOT NULL,
FORN_ESTADO VARCHAR(45) NOT NULL,
FORN_PAIS VARCHAR(30) NOT NULL,
FORN_CODPOSTAL VARCHAR(10) NOT NULL,
FORN_TELEFONE VARCHAR(15) NOT NULL,
FORN_CONTATO TEXT NOT NULL
);

#CRIANDO A TABELA FILIAIS
CREATE TABLE IF NOT EXISTS FILIAIS(
FILIAL_COD INT PRIMARY KEY,
FILIAL_NOME VARCHAR(45) NOT NULL,
FILIAL_RUA VARCHAR(100) NOT NULL,
FILIAL_NUMRUA INT,
FILIAL_BAIRRO VARCHAR(50) NOT NULL,
FILIAL_CIDADE VARCHAR(50) NOT NULL,
FILIAL_ESTADO VARCHAR(50) NOT NULL,
FILIAL_PAIS VARCHAR(50) NOT NULL,
FILIAL_CODPOSTAL VARCHAR(10) NOT NULL,
FILIAL_CAPACIDADE TEXT NOT NULL
);


#CRIANDO A TABELA PRODUTOS
CREATE TABLE IF NOT EXISTS PRODUTOS(
PROD_COD INT PRIMARY KEY,
PROD_NOME VARCHAR(50) NOT NULL,
PROD_DESCRICAO TEXT NOT NULL,
PROD_ESPECTEC TEXT NOT NULL,
PROD_QUANT DECIMAL(10,3) NOT NULL,
PROD_PRECOUNIT DECIMAL(10,2) NOT NULL,
PROD_UNIDMEDIDA VARCHAR(10) NOT NULL,
PROD_ESTOQ_MIN DECIMAL(10,3) NOT NULL
);

#CRIANDO A TABELA PEDIDOS
CREATE TABLE IF NOT EXISTS PEDIDOS(
PED_CODIGO INT PRIMARY KEY,
PED_DATA DATE NOT NULL,
PED_HORA TIME NOT NULL,
PED_PREVISAO DATE NOT NULL,
PED_STATUS ENUM('PENDENTE','CONCLUÍDO','EM ESPERA'),
PED_FORNECEDOR INT NOT NULL, #NOSSA CHAVE ESTRANGEIRA DE FORNECEDOR
CONSTRAINT FK_FORNECEDOR FOREIGN KEY (PED_FORNECEDOR) REFERENCES FORNECEDORES(FORN_COD) #REFERENCIA A CHAVE PRIMÁRIA DE FORNECEDORES
);

#CRIANDO A TABELA RECEBIMENTOS
CREATE TABLE IF NOT EXISTS RECEBIMENTOS(
RECEB_DATA DATE NOT NULL,
RECEB_HORA TIME NOT NULL,
RECEB_QUANT_PROD DECIMAL(10,3),
RECEB_CONDICAO TEXT NOT NULL,
RECEB_PEDIDOS INT PRIMARY KEY,
CONSTRAINT FK_PEDIDOS FOREIGN KEY(RECEB_PEDIDOS) REFERENCES PEDIDOS(PED_CODIGO)
);

#CRIANDO A TABELA DA ENTIDADE ASSOCIATIVA RESULTANTE DA RELAÇÃO: PEDIDOS X PRODUTOS 
CREATE TABLE IF NOT EXISTS PEDIDOS_PRODUTOS(
PDPR_PEDIDOS INT,
PDPR_PRODUTOS INT,
PRIMARY KEY(PDPR_PEDIDOS,PDPR_PRODUTOS),
PDPR_QUANT DECIMAL(10,3) NOT NULL,
CONSTRAINT PDPR_FK_PEDIDOS FOREIGN KEY(PDPR_PEDIDOS) REFERENCES PEDIDOS(PED_CODIGO),
CONSTRAINT PDPR_FK_PRODUTOS FOREIGN KEY(PDPR_PRODUTOS) REFERENCES PRODUTOS(PROD_COD)
);

#CRIANDO A TABELA DA ENTIDADE ASSOCIATIVA RESULTANTE DA RELAÇÃO: FILIAIS X PRODUTOS 
CREATE TABLE IF NOT EXISTS FILIAIS_PRODUTOS(
FLPR_FILIAL INT,
FLPR_PRODUTOS INT,
PRIMARY KEY(FLPR_FILIAL,FLPR_PRODUTOS),
FLPR_QUANT DECIMAL(10,3) NOT NULL,
CONSTRAINT FLPR_FK_FILIAIS FOREIGN KEY(FLPR_FILIAL) REFERENCES FILIAIS(FILIAL_COD),
CONSTRAINT FLPR_FK_PRODUTOS FOREIGN KEY(FLPR_PRODUTOS) REFERENCES PRODUTOS(PROD_COD)
);

#CRIANDO A TABELA DA ENTIDADE ASSOCIATIVA RESULTANTE DA RELAÇÃO: FORNECEDORES X PRODUTOS 
CREATE TABLE IF NOT EXISTS FORNECEDORES_PRODUTOS(
FRPR_FORNECEDOR INT,
FRPR_PRODUTOS INT,
PRIMARY KEY(FRPR_FORNECEDOR,FRPR_PRODUTOS),
CONSTRAINT FRPR_FK_FORNECEDORES FOREIGN KEY(FRPR_FORNECEDOR) REFERENCES FORNECEDORES(FORN_COD),
CONSTRAINT FRPR_FK_PRODUTOS FOREIGN KEY(FRPR_PRODUTOS) REFERENCES PRODUTOS(PROD_COD)
);


#ALTERAÇÕES NA TABELA FORNECEDORES
#CRIANDO UMA NOVA COLUNA PARA ARMAZENAR OS ENDEREÇOS DE EMAIL
ALTER TABLE FORNECEDORES ADD EMAIL_FORN VARCHAR(100);
#ALTERANDO A QUANTIDADE DE CARACTERES QUE A COLUNA BAIRRO PODERÁ RECEBER
ALTER TABLE FORNECEDORES MODIFY COLUMN FORN_BAIRRO VARCHAR(50);
#ALTERANDO O NOME DA COLUNA PARA O EMAIL
ALTER TABLE FORNECEDORES CHANGE COLUMN EMAIL_FORN FORN_EMAIL VARCHAR(100);
#REMOVENDO A ÚLTIMA COLUNA CRIADA (EMAIL)
ALTER TABLE FORNECEDORES DROP COLUMN FORN_EMAIL;


#ALTERAÇÕES NA TABELA FILIAIS
#CRIANDO UMA NOVA COLUNA PARA ARMAZENAR OS ENDEREÇOS DE EMAIL
ALTER TABLE FILIAIS ADD EMAIL_FILIAL VARCHAR(100);
#ALTERANDO O NOME DA COLUNA QUE ARMAZENARÁ OS ENDEREÇOS DE EMAIL
ALTER TABLE FILIAIS CHANGE COLUMN EMAIL_FILIAL FILIAL_EMAIL VARCHAR(100);
#ALTERANDO A QUANTIDADE DE CARACTERES QUE A COLUNA BAIRRO PODERÁ RECEBER
ALTER TABLE FILIAIS MODIFY COLUMN FILIAL_BAIRRO VARCHAR(45);
#REMOVENDO A ÚLTIMA COLUNA CRIADA (EMAIL)
ALTER TABLE FILIAIS DROP COLUMN FILIAL_EMAIL;


#ALTERAÇÕES NA TABELA PRODUTOS
#CRIANDO UMA NOVA COLUNA PARA ARMAZENAR AS CORES DOS PRODUTOS
ALTER TABLE PRODUTOS ADD COR_PROD VARCHAR(100);
#ALTERANDO O NOME DA COLUNA QUE ARMAZENARÁ AS CORES DOS PRODUTOS 
ALTER TABLE PRODUTOS CHANGE COLUMN COR_PROD PROD_COR VARCHAR(100);
#ALTERANDO A QUANTIDADE DE CARACTERES QUE O NOME DO PRODUTO PODERÁ RECEBER
ALTER TABLE PRODUTOS MODIFY COLUMN PROD_NOME VARCHAR(55);
#REMOVENDO A ÚLTIMA COLUNA CRIADA (COR)
ALTER TABLE PRODUTOS DROP COLUMN PROD_COR;


#ALTERAÇÕES NA TABELA PEDIDOS
#CRIANDO UMA NOVA COLUNA PARA ARMAZENAR OS VALORES DOS PRODUTOS
ALTER TABLE PEDIDOS ADD PED_VAL DECIMAL(10,2);
#ALTERANDO O NOME DA ÚLTIMA COLUNA CRIADA (VALORES DOS PRODUTOS)
ALTER TABLE PEDIDOS CHANGE COLUMN PED_VAL PED_VALOR DECIMAL(10,2);
#ALTERANDO O TIPO DE DADO DA ÚLTIMA COLUNA CRIADA (VALORES DOS PRODUTOS)
ALTER TABLE PEDIDOS MODIFY COLUMN PED_VALOR DECIMAL(10,3);
#REMOVENDO A ÚLTIMA COLUNA CRIADA (VALORES DOS PRODUTOS)
ALTER TABLE PEDIDOS DROP COLUMN PED_VALOR;


#ALTERAÇÕES NA TABELA RECEBIMENTOS
#CRIANDO UMA NOVA COLUNA PARA OBSERVAÇÕES
ALTER TABLE RECEBIMENTOS ADD OBSEVACAO_RECEB VARCHAR(45);
#ALTERANDO O NOME DA COLUNA QUE ARMAZENA A QUANTIDADE DOS PRODUTOS RECEBIDOS
ALTER TABLE RECEBIMENTOS CHANGE COLUMN RECEB_QUANT_PROD RECEB_QUANTIDADE_PROD DECIMAL(10,3);
#MUDANDO O TIPO DE DADO DA ÚLTIMA COLUNA CRIADA (OBSERVAÇÕES DOS PRODUTOS RECEBIDOS)
ALTER TABLE RECEBIMENTOS MODIFY COLUMN OBSEVACAO_RECEB TEXT;
#REMOVENDO A ÚLTIMA COLUNA CRIADA (OBSERVAÇÃO)
ALTER TABLE RECEBIMENTOS DROP COLUMN OBSEVACAO_RECEB;


#ALTERAÇÕES NA TABELA PEDIDOS_PRODUTOS
#ADICIONANDO UMA NOVA COLUNA PARA ARMAZENAR O VALOR DOS PRODUTOS
ALTER TABLE PEDIDOS_PRODUTOS ADD PDPR_VALORES DECIMAL(10,2);
#ALTERANDO O NOME DA COLUNA QUE ARMAZENA A QUANTIDADE DE CADA PRODUTO
ALTER TABLE PEDIDOS_PRODUTOS CHANGE COLUMN PDPR_QUANT PDPR_QUANTIDADE DECIMAL(10,3);
#ALTERANDO O TIPO DE DADO DA ÚLTIMA COLUNA CRIADA (VALORES DOS PRODUTOS)
ALTER TABLE PEDIDOS_PRODUTOS MODIFY COLUMN PDPR_VALORES DECIMAL(10,3);
#REMOVENDO A ÚLTIMA COLUNA CRIADA (PDPR_VALORES)
ALTER TABLE PEDIDOS_PRODUTOS DROP COLUMN PDPR_VALORES;


#ALTERAÇÕES NA TABELA FILIAIS_PRODUTOS
#CRIANDO UMA NOVA COLUNA QUE ARMAZENARÁ OS VALORES DOS PRODUTOS
ALTER TABLE FILIAIS_PRODUTOS ADD FLPR_VALOR DECIMAL(10,2);
#ALTERANDO O NOME DA COLUNA QUE ARMAZENA A QUANTIDADE DE CADA PRODUTO
ALTER TABLE FILIAIS_PRODUTOS CHANGE COLUMN FLPR_QUANT FLPR_QUANT_PROD DECIMAL(10,3);
#ALTERANDO O TIPO DE DADO DA COLUNA QUE ARMAZENARÁ OS VALORES DOS PRODUTOS
ALTER TABLE FILIAIS_PRODUTOS MODIFY COLUMN FLPR_VALOR DECIMAL(10,3);
#REMOVENDO A COLUNA QUE IRIA ARMAZENAR OS VALORES DOS PRODUTOS
ALTER TABLE FILIAIS_PRODUTOS DROP COLUMN FLPR_VALOR;


#ALTERAÇÕES NA TABELA FORNECEDORES_PRODUTOS
#CRIANDO UMA NOVA COLUNA QUE ARMAZENARÁ OS VALORES DOS PRODUTOS
ALTER TABLE FORNECEDORES_PRODUTOS ADD VALOR_FRPR DECIMAL(10,2);
#ALTERANDO O NOME DA COLUNA QUE ARMAZENA A QUANTIDADE DE CADA PRODUTO
ALTER TABLE FORNECEDORES_PRODUTOS CHANGE COLUMN VALOR_FRPR FRPR_VALOR DECIMAL(10,2);
#ALTERANDO O TIPO DE DADO DA COLUNA QUE ARMAZENARÁ OS VALORES DOS PRODUTOS
ALTER TABLE FORNECEDORES_PRODUTOS MODIFY COLUMN FRPR_VALOR DECIMAL(10,3);
#REMOVENDO A COLUNA QUE IRIA ARMAZENAR OS VALORES DOS PRODUTOS
ALTER TABLE FORNECEDORES_PRODUTOS DROP COLUMN FRPR_VALOR;

#REMOVENDO A TABELA FORNECEDORES_PRODUTOS:
DROP TABLE FORNECEDORES_PRODUTOS;
